/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import modelo.Maletas;

public class FrmVender extends javax.swing.JFrame {

    Maletas maleta=new Maletas();    
    int contador,contador1,contador2,contador3,contador4;
    int acumulador,acumulador1,acumulador2,acumulador3,acumulador4;
    int acumImporte,acumImporte1,acumImporte2,acumImporte3,acumImporte4;
    String numero="",numero1="",numero2="",numero3="",numero4="";
    /**
     * Creates new form FrmVender
     */
    public FrmVender() {
        initComponents();
        this.setTitle("Vender");        
    }
    
    
    public double ImporteCompra(){
        int cantidad=Integer.parseInt(txtCantidad.getText());
        double precio=Double.parseDouble(txtPrecio.getText());
        return cantidad*precio;
    }
    
    public double descuento(){
        double descuento;
        int cantidad=Integer.parseInt(txtCantidad.getText());
        if(cantidad>=1 && cantidad<=3){
            descuento=0.04*ImporteCompra();
        }else if(cantidad>=4 && cantidad<=5){
            descuento=0.055*ImporteCompra();
        }else if(cantidad>=6 && cantidad<=8){
            descuento=0.07*ImporteCompra();
        }else{
            descuento=0.085*ImporteCompra();

        }
        return descuento;
    }
    
    public double ImportePagar(){
        return ImporteCompra()-descuento();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboCodigo = new javax.swing.JComboBox<>();
        txtPrecio = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        btnVender = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaVenta = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Codigo");

        jLabel2.setText("Precio (S/)");

        jLabel3.setText("Cantidad de maletas");

        cboCodigo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MT0", "MT1", "MT2", "MT3", "MT4" }));
        cboCodigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboCodigoItemStateChanged(evt);
            }
        });

        txtPrecio.setEditable(false);
        txtPrecio.setBackground(new java.awt.Color(204, 204, 204));

        btnVender.setText("Vender");
        btnVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenderActionPerformed(evt);
            }
        });

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        txtAreaVenta.setColumns(20);
        txtAreaVenta.setRows(5);
        jScrollPane1.setViewportView(txtAreaVenta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(140, 140, 140)
                                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addGap(85, 85, 85)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cboCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnVender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCerrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void cboCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboCodigoItemStateChanged
        String categoria=(String)cboCodigo.getSelectedItem();
         
         if(categoria.equals("MT0")){
             txtPrecio.setText(maleta.precio0+"");   //124.90
         }
         if(categoria.equals("MT1")){
             txtPrecio.setText(maleta.precio1+"");   //174.90
         }
         if(categoria.equals("MT2")){
             txtPrecio.setText(maleta.precio2+"");    //159.90
         }
         if(categoria.equals("MT3")){
             txtPrecio.setText(maleta.precio3+"");     //99.90
         }
         if(categoria.equals("MT4")){
             txtPrecio.setText(maleta.precio4+"");     //84.90
         }
    }//GEN-LAST:event_cboCodigoItemStateChanged

    private void btnVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenderActionPerformed
        String codigo=cboCodigo.getSelectedItem().toString();
        int cantidad=Integer.parseInt(txtCantidad.getText());
        
        
        if(codigo.equals("MT0")){
                contador++;
                numero =String.valueOf(contador);
                acumulador=(int) (acumulador+cantidad);
                //declaro valor para almacenar
                String acum0 =String.valueOf(acumulador);
               // --------------------------------------------------
               acumImporte=(int)(acumImporte+ImportePagar());
               String A=String.valueOf(acumImporte);
            txtAreaVenta.setText("Codigo de la maleta : "+maleta.codigo0+
                    "\nModelo de la maleta : "+maleta.modelo0+
                    "\nPrecio de maleta : "+maleta.precio0+
                    "\nCantidad de Unidades adquiridas: "+cantidad+
                    "\nImporte de Compra: "+ImporteCompra()+
                    "\nImporte de descuento: "+descuento()+
                    "\nImporte a Pagar: "+ ImportePagar()+
                    "\nObsequio: "+ maleta.obsequio +       
                    "\nPremio Sorpresa: "+ maleta.premioSorpresa+
                    "\ncantidad de ventas: "+numero+
                    "\nCantidad total de maletas"+acum0+
                    "\nImporte total acumulado"+A);    
                     
        }
        
        if(codigo.equals("MT1")){
                contador1++;
                numero1=String.valueOf(contador1);
                acumulador1=(int) (acumulador1+cantidad);
                //declaro valor para almacenar
                String acum1 =String.valueOf(acumulador1);
                acumImporte1=(int)(acumImporte1+ImportePagar());
               String B=String.valueOf(acumImporte1);
            txtAreaVenta.setText("Codigo de la maleta : "+maleta.codigo1+
                    "\nModelo de la maleta : "+maleta.modelo1+
                    "\nPrecio de maleta : "+maleta.precio1+
                    "\nCantidad de Unidades adquiridas: "+cantidad+
                    "\nImporte de Compra: "+ ImporteCompra()+
                    "\nImporte de descuento: "+descuento()+
                    "\nImporte a Pagar: "+ImportePagar()+
                    "\nObsequio: "+ maleta.obsequio+            
                    "\nPremio Sorpresa: " +maleta.premioSorpresa+
                    "\ncantidad de ventas: "+numero1+
                    "\nCantidad total de maletas"+acum1+
                    "\nImporte total acumulado"+B);
        }
        if(codigo.equals("MT2")){
                contador2++;
                numero2=String.valueOf(contador2);
                acumulador2=(int) (acumulador2+cantidad);
                //declaro valor para almacenar
                String acum2 =String.valueOf(acumulador2);
                acumImporte2=(int)(acumImporte2+ImportePagar());
               String C=String.valueOf(acumImporte2);
            txtAreaVenta.setText("Codigo de la maleta : "+maleta.codigo2+
                    "\nModelo de la maleta :"+maleta.modelo2+
                    "\nPrecio de maleta :"+maleta.precio2+
                    "\nCantidad de Unidades adquiridas: "+cantidad+
                    "\nImporte de Compra: "+ ImporteCompra()+
                    "\nImporte de descuento: "+descuento()+
                    "\nImporte a Pagar: "+ImportePagar()+
                    "\nObsequio: "+ maleta.obsequio+            
                    "\nPremio Sorpresa: "+maleta.premioSorpresa +
                    "\ncantidad de ventas: "+numero2+
                    "\nCantidad total de maletas"+acum2+
                    "\nImporte total acumulado"+C);
        }
        if(codigo.equals("MT3")){
                contador3++;
                numero3=String.valueOf(contador3);
                acumulador3=(int) (acumulador3+cantidad);
                //declaro valor para almacenar
                String acum3 =String.valueOf(acumulador3);
                acumImporte3=(int)(acumImporte3+ImportePagar());
                String F=String.valueOf(acumImporte3);
            txtAreaVenta.setText("Codigo de la maleta : "+maleta.codigo3+
                    "\nModelo de la maleta : "+maleta.modelo3+
                    "\nPrecio de maleta : "+maleta.precio3+
                    "\nCantidad de Unidades adquiridas: "+cantidad+
                    "\nImporte de Compra: "+ ImporteCompra()+
                    "\nImporte de descuento: "+descuento()+
                    "\nImporte a Pagar: "+ImportePagar()+
                    "\nObsequio: "+ maleta.obsequio+            
                    "\nPremio Sorpresa: "+maleta.premioSorpresa+
                    "\ncantidad de ventas: "+numero3+
                    "\nCantidad total de maletas"+acum3+
                    "\nImporte total acumulado"+F);
        }
        if(codigo.equals("MT4")){
                contador4++;
                numero4=String.valueOf(contador4);
                acumulador4=(int) (acumulador4+cantidad);
                //declaro valor para almacenar
                String acum4 =String.valueOf(acumulador4);
                acumImporte4=(int)(acumImporte4+ImportePagar());
               String L=String.valueOf(acumImporte4);
            txtAreaVenta.setText("Codigo de la maleta : "+maleta.codigo4+
                    "\nModelo de la maleta : "+maleta.modelo4+
                    "\nPrecio de maleta : "+maleta.precio4+
                    "\nCantidad de Unidades adquiridas: "+cantidad+
                    "\nImporte de Compra: "+ ImporteCompra()+
                    "\nImporte de descuento: "+ descuento()+
                    "\nImporte a Pagar: "+ImportePagar()+
                    "\nObsequio: "+    maleta.obsequio+         
                    "\nPremio Sorpresa: " +maleta.premioSorpresa+
                    "\ncantidad de ventas: "+numero4+
                    "\nCantidad total de maletas"+acum4+
                    "\nImporte total acumulado"+L);
        }
        
        
    }//GEN-LAST:event_btnVenderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmVender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmVender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmVender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmVender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmVender().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnVender;
    private javax.swing.JComboBox<String> cboCodigo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaVenta;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    

}

